server:
  port: 8081
security-constraints:
  open-uri:
    - /actuator/**
    - /api/v1/*/api-doc
    - /profiles
    - /profiles/**
    - /pets/**
    - /pets
    - /webjars/swagger-ui/**
    - /swagger-ui**
    - /v3/api-docs/**
spring:
  cloud:
    gateway:
      default-filters:
        - TokenRelay
      discovery:
        locator:
          enabled: false
      routes:
        - id: userProfilesPrincipalGetPatchDelete
          uri: http://localhost:8095
          predicates:
            - Path=/profiles/me
            - Method=GET,PATCH,DELETE
          filters:
            - AddPrincipalToPathFilter
        - id: userProfilesPut
          uri: http://localhost:8095
          predicates:
            - Path=/profiles/**
            - Method=PUT
        - id: serviceFunctions
          uri: http://localhost:8095
          predicates:
            - Path=/service/**
        - id: petprofiles
          uri: http://localhost:8095
          predicates:
            - Path=/pets, /pets/**
        - id: openapi
          uri: http://localhost:8081
          predicates:
            - Path=/v3/api-docs/**
          filters:
            - RewritePath=/v3/api-docs/(?<path>.*), /api/v1//$\{path}/api-doc
  security:
    oauth2:
      client:
        registration:
          keycloak:
            provider: keycloak
            client-id: web
            client-secret: '{cipher}4da83c00487cf3f48d32aa852e3ec361312ae5395a3719cceeb82de1aec1d9f26827c540ef690520ca4e7b0b62aa61f91fc16b25c76962ce41ce95503a2c2618'
            authorization-grant-type: authorization_code
            redirect-uri: ${keycloak-client.server-url}/login/oauth2/code/keycloak
            scope: openid
        provider:
          keycloak:
            authorization-uri: ${keycloak-client.server-url}/realms/${keycloak-client.realm}/protocol/openid-connect/auth
            token-uri: ${keycloak-client.server-url}/realms/${keycloak-client.realm}/protocol/openid-connect/token
            user-info-uri: ${keycloak-client.server-url}/realms/${keycloak-client.realm}/protocol/openid-connect/userinfo
            jwk-set-uri: ${keycloak-client.server-url}/realms/${keycloak-client.realm}/protocol/openid-connect/certs
            user-name-attribute: name
            user-info-authentication-method: header
      resourceserver:
        jwt:
          jwk-set-uri: ${keycloak-client.server-url}/realms/${keycloak-client.realm}/protocol/openid-connect/certs
keycloak-client:
  server-url: https://auth-dev.agenadev.com/auth
  realm: vet-at-home
management:
  endpoints:
    web:
      exposure:
        include: '*'
logging:
  level:
    org.springframework.cloud.gateway: DEBUG
    reactor.netty.http.client: DEBUG
springdoc:
  packagesToScan: com.agenatech