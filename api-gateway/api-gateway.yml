server:
  port: 8081
logging:
  level:
    org.springframework.cloud.gateway: DEBUG
    reactor.netty.http.client: DEBUG
spring:
  cloud:
    gateway:
      default-filters:
        - TokenRelay
      discovery:
        locator:
          enabled: true
      routes:
        - id: profiles
          uri: lb://profiles
          predicates:
            - Path=/api/v1/profiles/**
        - id: cars
          uri: lb://cars
          predicates:
            - Path=/cars/**
  security:
    oauth2:
      client:
        registration:
          keycloak:
            provider: keycloak
            client-id: test-gateway
            client-secret: '{cipher}6c1ca654778f10321f096b20143493b40337ad90c5b0f991b658c918aecdcd9533dae74a7293a8ad7c1e60d5a8bbde8fc1ab72814c727fd13f6431748785b2bb'
            authorization-grant-type: authorization_code
            redirect-uri: http://localhost:8085/login/oauth2/code/keycloak
            scope: openid
        provider:
          keycloak:
            authorization-uri: ${keycloak-client.server-url}/realms/${keycloak-client.realm}/protocol/openid-connect/auth
            token-uri: ${keycloak-client.server-url}/realms/${keycloak-client.realm}/protocol/openid-connect/token
            user-info-uri: ${keycloak-client.server-url}/realms/${keycloak-client.realm}/protocol/openid-connect/userinfo
            jwk-set-uri: ${keycloak-client.server-url}/realms/${keycloak-client.realm}/protocol/openid-connect/certs
            user-name-attribute: name
            user-info-authentication-method: header
      resourceserver:
        jwt:
          jwk-set-uri: ${keycloak-client.server-url}/realms/${keycloak-client.realm}/protocol/openid-connect/certs
keycloak-client:
  server-url: http://localhost:8085/auth
  realm: spring-micro-main
management:
  endpoints:
    web:
      exposure:
        include: '*'